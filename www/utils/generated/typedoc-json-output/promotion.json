{
	"id": 12801,
	"name": "promotion",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 13265,
			"name": "FindConfigOrder",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Temporary type fixing to allow any level of orders until we get to properly clean all the types"
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
					"line": 55,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13266,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 55,
							"character": 30
						}
					],
					"indexSignatures": [
						{
							"id": 13267,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
									"line": 56,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 13268,
									"name": "Key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 13269,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										]
									},
									{
										"type": "reference",
										"target": 13265,
										"name": "FindConfigOrder",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "ASC"
									},
									{
										"type": "literal",
										"value": "DESC"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 13050,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 13051,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 69,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intersection",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 13052,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {}
											}
										}
									]
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 13060,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 13053,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 74,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13054,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 79,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13055,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 84,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 13056,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 90,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13265,
						"name": "FindConfigOrder",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13057,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 96,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13058,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 101,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 13059,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13051,
						13053,
						13054,
						13055,
						13056,
						13057,
						13058,
						13059
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
					"line": 65,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 13060,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 13239,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 13240,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13239,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13242,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13242,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 13241,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13239,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13242,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13242,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13240,
						13241
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
					"line": 11,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 13242,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 13039,
					"name": "FilterablePromotionProps"
				},
				{
					"type": "reference",
					"target": 13102,
					"name": "FilterablePromotionRuleProps"
				},
				{
					"type": "reference",
					"target": 13112,
					"name": "FilterableCampaignProps"
				}
			]
		},
		{
			"id": 13061,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 13062,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 142,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13063,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13062
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 138,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13063,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 13064,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 13065,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 154,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13066,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13065
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 150,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13066,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 13357,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 9,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 13358,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 13358,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 13358,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 13382,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 13386,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13358,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 13389,
					"typeArguments": [
						{
							"type": "reference",
							"target": 13358,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 13359,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 15,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 13360,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 13360,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 13360,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 13360,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 13382,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 18,
					"character": 5
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13383,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13384,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
											"line": 28,
											"character": 6
										}
									],
									"signatures": [
										{
											"id": 13385,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
													"line": 28,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										13384
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 27,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 13420,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 37,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 13421,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 13421,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 13421,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 13421,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 13410,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 40,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 13419,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 13419,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 13411,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 13412,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"sources": [
									{
										"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
										"line": 41,
										"character": 2
									}
								],
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									13412
								]
							}
						],
						"sources": [
							{
								"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
								"line": 40,
								"character": 28
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 13420,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 13419,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 13413,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13414,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
											"line": 45,
											"character": 6
										}
									],
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13414
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 44,
									"character": 14
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 13420,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 13419,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 13415,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 13416,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
												"line": 49,
												"character": 6
											}
										],
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											13416
										]
									}
								],
								"sources": [
									{
										"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
										"line": 48,
										"character": 14
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 13420,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 13419,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 13417,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 13418,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
													"line": 53,
													"character": 6
												}
											],
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												13418
											]
										}
									],
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
											"line": 52,
											"character": 14
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 13420,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 13243,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 58,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13264,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13244,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13245,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 13357,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13264,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 13246,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 13357,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13264,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 13247,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 13359,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13264,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13359,
											"typeArguments": [
												{
													"type": "reference",
													"target": 13264,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 13248,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13359,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13264,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13249,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 13359,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13264,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 13250,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 13359,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13264,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 13251,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13357,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13264,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13252,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13359,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13264,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13253,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 67,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13359,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13264,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13254,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13359,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13264,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13255,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 69,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13359,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13264,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13256,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13257,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 71,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13258,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13259,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13260,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 74,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 13261,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 13262,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 76,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 13263,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13245,
								13246,
								13247,
								13248,
								13249,
								13250,
								13251,
								13252,
								13253,
								13254,
								13255,
								13256,
								13257,
								13258,
								13259,
								13260,
								13261,
								13262,
								13263
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
							"line": 58,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 13407,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 80,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 13408,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 13408,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 13359,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13408,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 13410,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13408,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 13389,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 81,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 13390,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 13243,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13407,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13390,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 13407,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13390,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13407,
							"typeArguments": [
								{
									"type": "reference",
									"target": 13390,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 13409,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 87,
					"character": 5
				}
			],
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 0
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					}
				]
			}
		},
		{
			"id": 13401,
			"name": "FilterQueryProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 89,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13405,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 13406,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 13405,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "Key"
							},
							"name": "Key",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 13405,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"extendsType": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "bigint"
							},
							{
								"type": "intrinsic",
								"name": "symbol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 13405,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": 13243,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 13405,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 13405,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "inferred",
							"name": "U"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 13402,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
											"line": 99,
											"character": 16
										}
									],
									"indexSignatures": [
										{
											"id": 13403,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
													"line": 99,
													"character": 18
												}
											],
											"parameters": [
												{
													"id": 13404,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "V"
									},
									"name": "V",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "object"
								},
								"trueType": {
									"type": "reference",
									"target": 13386,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "V"
													},
													"name": "V",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Partial",
											"package": "typescript"
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 13406,
												"name": "Prev",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 13409,
												"name": "PrevLimit",
												"package": "@medusajs/types"
											}
										}
									],
									"name": "FilterQuery",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 13386,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 107,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13387,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 13388,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 13388,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 13387,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 13394,
						"typeArguments": [
							{
								"type": "inferred",
								"name": "Prototype"
							}
						],
						"name": "Constructor",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "reference",
						"target": 13401,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Prototype"
								},
								"name": "Prototype",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 13388,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 13401,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13387,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 13388,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					}
				}
			}
		},
		{
			"id": 13391,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13392,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13393,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 15,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13393
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 14,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 13376,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 18,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13381,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13377,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13378,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13379,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13391,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13380,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 21,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13381,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13378,
								13379,
								13380
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 18,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 13336,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 24,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13339,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 13376,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13339,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13337,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13338,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 25,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13338
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 24,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 13347,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 28,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13356,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13348,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13349,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 29,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13350,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 30,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13356,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 13351,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 31,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13352,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13353,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 33,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13354,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 13355,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13349,
								13350,
								13351,
								13352,
								13353,
								13354,
								13355
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 28,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 13366,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13367,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13368,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 2,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13369,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 3,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13370,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 4,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13371,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 5,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13372,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13373,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 13374,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 13375,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 18,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13368,
								13369,
								13370,
								13371,
								13372,
								13373,
								13374,
								13375
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 1,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 13362,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13363,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 13364,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 23,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13365,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13363,
						13364,
						13365
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
					"line": 21,
					"character": 17
				}
			]
		},
		{
			"id": 13291,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13292,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13293,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 13362,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 13362,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 13294,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 13295,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 13296,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 13297,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
															"line": 44,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														13296,
														13297
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
													"line": 42,
													"character": 6
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 13298,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 13299,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13366,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13300,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 13301,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 13302,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
												"line": 50,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 13303,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
												"line": 51,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 13304,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
												"line": 52,
												"character": 4
											}
										],
										"type": {
											"type": "reference",
											"target": 13366,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											13302,
											13303,
											13304
										]
									}
								],
								"sources": [
									{
										"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
										"line": 49,
										"character": 12
									}
								]
							}
						}
					}
				},
				{
					"id": 13305,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13292,
						13293,
						13294,
						13298,
						13299,
						13300,
						13305
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
					"line": 30,
					"character": 17
				}
			]
		},
		{
			"id": 13394,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 21,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13400,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13395,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 21,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 13396,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 13399,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 13400,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 13397,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 21,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 13398,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 13400,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 13309,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 143,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13310,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13311,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 146,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 13312,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 168,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13313,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 169,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 13314,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 173,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13311,
										13312,
										13313,
										13314
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 145,
									"character": 2
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 13124,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 191,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 13291,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13125,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13126,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 198,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13127,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 199,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13306,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 13128,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 200,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 13129,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 13130,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 201,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 13131,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 202,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 13132,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 203,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 13133,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 13134,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 207,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 13135,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 208,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 13136,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 209,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							13134,
																							13135,
																							13136
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																						"line": 206,
																						"character": 8
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 13137,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 212,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": 13306,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															13130,
															13131,
															13132,
															13137
														]
													}
												],
												"sources": [
													{
														"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
														"line": 200,
														"character": 12
													}
												]
											}
										}
									}
								},
								{
									"id": 13138,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 214,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13139,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 215,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 13140,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 219,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 13141,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 223,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 13142,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 227,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 13143,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 232,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 13144,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 233,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 13145,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 13146,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 237,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 13147,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 241,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 13148,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 242,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 13309,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														13146,
														13147,
														13148
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 233,
													"character": 19
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13126,
										13127,
										13128,
										13138,
										13139,
										13140,
										13141,
										13142,
										13143,
										13144
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 194,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 13306,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 246,
					"character": 20
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 13366,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13307,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13308,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 250,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13308
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 246,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 12974,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 12975,
					"name": "__joinerConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 314,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 12976,
							"name": "__joinerConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 314,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13124,
								"name": "ModuleJoinerConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 12977,
					"name": "__hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@ignore"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 319,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 12978,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 12979,
									"name": "onApplicationStart",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 320,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 12980,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 320,
													"character": 25
												}
											],
											"signatures": [
												{
													"id": 12981,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 320,
															"character": 25
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 12982,
									"name": "onApplicationShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 321,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 12983,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 321,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 12984,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 321,
															"character": 28
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 12985,
									"name": "onApplicationPrepareShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 322,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 12986,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 322,
													"character": 35
												}
											],
											"signatures": [
												{
													"id": 12987,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 322,
															"character": 35
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										12979,
										12982,
										12985
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 319,
									"character": 12
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12977
					]
				},
				{
					"title": "Methods",
					"children": [
						12975
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 310,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 12802,
					"name": "IPromotionModuleService"
				}
			]
		},
		{
			"id": 13333,
			"name": "ApplicationMethodTypeValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method's possible types."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "fixed"
					},
					{
						"type": "literal",
						"value": "percentage"
					}
				]
			}
		},
		{
			"id": 13334,
			"name": "ApplicationMethodTargetTypeValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method's possible target types."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
					"line": 13,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "order"
					},
					{
						"type": "literal",
						"value": "shipping_methods"
					},
					{
						"type": "literal",
						"value": "items"
					}
				]
			}
		},
		{
			"id": 13335,
			"name": "ApplicationMethodAllocationValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method's possible allocation values."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
					"line": 21,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "each"
					},
					{
						"type": "literal",
						"value": "across"
					}
				]
			}
		},
		{
			"id": 13215,
			"name": "ApplicationMethodDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method details."
					}
				]
			},
			"children": [
				{
					"id": 13216,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13217,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the application method indicating how\nthe associated promotion is applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13333,
						"name": "ApplicationMethodTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13218,
					"name": "target_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target type of the application method indicating\nwhether the associated promotion is applied to the cart's items,\nshipping methods, or the whole order."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13334,
						"name": "ApplicationMethodTargetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13219,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The allocation value that indicates whether the associated promotion\nis applied on each item in a cart or split between the items in the cart."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13335,
						"name": "ApplicationMethodAllocationValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13220,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discounted amount applied by the associated promotion based on the "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 54,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13221,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the application method"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 59,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13222,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The max quantity allowed in the cart for the associated promotion to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 64,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13223,
					"name": "buy_rules_min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required for a "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion to be applied.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the\nvalue of this attribute is "
							},
							{
								"kind": "code",
								"text": "`2`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 71,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13224,
					"name": "apply_to_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity that results from matching the "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion's condition.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the value\nof this attribute is "
							},
							{
								"kind": "code",
								"text": "`1`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 78,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13225,
					"name": "promotion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 83,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 13021,
								"name": "PromotionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 13226,
					"name": "target_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target rules of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 88,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13072,
							"name": "PromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13227,
					"name": "buy_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The buy rules of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 93,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13072,
							"name": "PromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13216,
						13217,
						13218,
						13219,
						13220,
						13221,
						13222,
						13223,
						13224,
						13225,
						13226,
						13227
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
					"line": 26,
					"character": 17
				}
			]
		},
		{
			"id": 13189,
			"name": "CreateApplicationMethodDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method to be created."
					}
				]
			},
			"children": [
				{
					"id": 13190,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the application method indicating how\nthe associated promotion is applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13333,
						"name": "ApplicationMethodTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13191,
					"name": "target_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target type of the application method indicating\nwhether the associated promotion is applied to the cart's items,\nshipping methods, or the whole order."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13334,
						"name": "ApplicationMethodTargetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13192,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The allocation value that indicates whether the associated promotion\nis applied on each item in a cart or split between the items in the cart."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 117,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13335,
						"name": "ApplicationMethodAllocationValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13193,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discounted amount applied by the associated promotion based on the "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 122,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13194,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency of the value to apply."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 127,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13195,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The max quantity allowed in the cart for the associated promotion to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 132,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13196,
					"name": "buy_rules_min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required for a "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion to be applied.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the\nvalue of this attribute is "
							},
							{
								"kind": "code",
								"text": "`2`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 139,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13197,
					"name": "apply_to_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity that results from matching the "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion's condition.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the value\nof this attribute is "
							},
							{
								"kind": "code",
								"text": "`1`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 146,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13198,
					"name": "promotion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 151,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 13021,
								"name": "PromotionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 13199,
					"name": "target_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target rules of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 156,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13067,
							"name": "CreatePromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13200,
					"name": "buy_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The buy rules of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 161,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13067,
							"name": "CreatePromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13190,
						13191,
						13192,
						13193,
						13194,
						13195,
						13196,
						13197,
						13198,
						13199,
						13200
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
					"line": 99,
					"character": 17
				}
			]
		},
		{
			"id": 13228,
			"name": "UpdateApplicationMethodDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the application method."
					}
				]
			},
			"children": [
				{
					"id": 13229,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 171,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13230,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the application method indicating how\nthe associated promotion is applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 177,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13333,
						"name": "ApplicationMethodTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13231,
					"name": "target_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target type of the application method indicating\nwhether the associated promotion is applied to the cart's items,\nshipping methods, or the whole order."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 184,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13334,
						"name": "ApplicationMethodTargetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13232,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The allocation value that indicates whether the associated promotion\nis applied on each item in a cart or split between the items in the cart."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 190,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13335,
						"name": "ApplicationMethodAllocationValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13233,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discounted amount applied by the associated promotion based on the "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 195,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13234,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the promotions application"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 200,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13235,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The max quantity allowed in the cart for the associated promotion to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 205,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13236,
					"name": "buy_rules_min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required for a "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion to be applied.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the\nvalue of this attribute is "
							},
							{
								"kind": "code",
								"text": "`2`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 212,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13237,
					"name": "apply_to_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity that results from matching the "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion's condition.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the value\nof this attribute is "
							},
							{
								"kind": "code",
								"text": "`1`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13238,
					"name": "promotion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 224,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 13021,
								"name": "PromotionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13229,
						13230,
						13231,
						13232,
						13233,
						13234,
						13235,
						13236,
						13237,
						13238
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
					"line": 167,
					"character": 17
				}
			]
		},
		{
			"id": 13361,
			"name": "CampaignBudgetTypeValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The campaign budget's possible types."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "spend"
					},
					{
						"type": "literal",
						"value": "usage"
					}
				]
			}
		},
		{
			"id": 13279,
			"name": "CampaignBudgetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The campaign budget details."
					}
				]
			},
			"children": [
				{
					"id": 13280,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13281,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the campaign budget:\n\n- "
							},
							{
								"kind": "code",
								"text": "`spend`"
							},
							{
								"kind": "text",
								"text": " indicates that the budget is limited by the amount discounted by the promotions in the associated campaign.\n- "
							},
							{
								"kind": "code",
								"text": "`usage`"
							},
							{
								"kind": "text",
								"text": " indicates that the budget is limited by the number of times the promotions of the associated campaign have been used."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13361,
						"name": "CampaignBudgetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13282,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The limit of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
							"line": 29,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13283,
					"name": "used",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The usage from the campaign budget's limit:\n\n- If the budget's type is "
							},
							{
								"kind": "code",
								"text": "`spend`"
							},
							{
								"kind": "text",
								"text": ", the value of this attribute is the amount discounted so far by the promotions in the associated campaign.\n- If the budget's type is "
							},
							{
								"kind": "code",
								"text": "`usage`"
							},
							{
								"kind": "text",
								"text": ", the value of this attribute is the number of times the promotions of the associated campaign have been used so far."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13284,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13280,
						13281,
						13282,
						13283,
						13284
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
					"line": 11,
					"character": 17
				}
			]
		},
		{
			"id": 13085,
			"name": "CampaignDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The campaign details."
					}
				]
			},
			"children": [
				{
					"id": 13086,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13087,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13088,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13089,
					"name": "campaign_identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The campaign identifier of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13090,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The start date of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 32,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 13091,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The end date of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 13092,
					"name": "budget",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 42,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13279,
						"name": "CampaignBudgetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13093,
					"name": "promotions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated promotions."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13021,
							"name": "PromotionDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13086,
						13087,
						13088,
						13089,
						13090,
						13091,
						13092,
						13093
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
					"line": 8,
					"character": 17
				}
			]
		},
		{
			"id": 13112,
			"name": "FilterableCampaignProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved campaigns."
					}
				]
			},
			"children": [
				{
					"id": 13116,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13112,
									"name": "FilterableCampaignProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13239,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13112,
											"name": "FilterableCampaignProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13240,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 13117,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13112,
									"name": "FilterableCampaignProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13239,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13112,
											"name": "FilterableCampaignProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13241,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 13113,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Find campaigns by their name or description through this search term."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 58,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13114,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the campaigns by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 62,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 13115,
					"name": "campaign_identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters the campaigns by their campaign identifier."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 67,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13116,
						13117,
						13113,
						13114,
						13115
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
					"line": 53,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 13239,
					"typeArguments": [
						{
							"type": "reference",
							"target": 13112,
							"name": "FilterableCampaignProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 12998,
			"name": "ComputeActions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A compute action informs you what adjustment must be made to a cart item or shipping method."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 13163,
						"name": "AddItemAdjustmentAction",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 13169,
						"name": "RemoveItemAdjustmentAction",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 13174,
						"name": "AddShippingMethodAdjustment",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 13180,
						"name": "RemoveShippingMethodAdjustment",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 13184,
						"name": "CampaignBudgetExceededAction",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 12988,
			"name": "UsageComputedActions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "These computed action types can affect a campaign's budget."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 16,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 12989,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 12990,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount to remove off the shipping method's total."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13149,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 12991,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The promotion's code."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								12990,
								12991
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 16,
							"character": 35
						}
					]
				}
			}
		},
		{
			"id": 13184,
			"name": "CampaignBudgetExceededAction",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This action indicates that the promotions within a campaign can no longer be used\nas the campaign budget has been exceeded."
					}
				]
			},
			"children": [
				{
					"id": 13185,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of action."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "campaignBudgetExceeded"
					}
				},
				{
					"id": 13186,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 41,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13185,
						13186
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 32,
					"character": 17
				}
			]
		},
		{
			"id": 13163,
			"name": "AddItemAdjustmentAction",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This action indicates that an adjustment must be made to an item. For example, removing $5 off its amount."
					}
				]
			},
			"children": [
				{
					"id": 13164,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of action."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "addItemAdjustment"
					}
				},
				{
					"id": 13165,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated item's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13166,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to remove off the item's total."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 61,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13149,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13167,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 66,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13168,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's description."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 71,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13164,
						13165,
						13166,
						13167,
						13168
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 47,
					"character": 17
				}
			]
		},
		{
			"id": 13169,
			"name": "RemoveItemAdjustmentAction",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This action indicates that an adjustment must be removed from a line item. For example, remove the $5 discount applied before."
					}
				]
			},
			"children": [
				{
					"id": 13170,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of action."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "removeItemAdjustment"
					}
				},
				{
					"id": 13171,
					"name": "adjustment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated adjustment's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 86,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13172,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's description."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13173,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 96,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13170,
						13171,
						13172,
						13173
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 77,
					"character": 17
				}
			]
		},
		{
			"id": 13174,
			"name": "AddShippingMethodAdjustment",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This action indicates that an adjustment must be made on a shipping method. For example, make the shipping method free."
					}
				]
			},
			"children": [
				{
					"id": 13175,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of action."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "addShippingMethodAdjustment"
					}
				},
				{
					"id": 13176,
					"name": "shipping_method_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping method's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13177,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to remove off the shipping method's total."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 116,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13149,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13178,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 121,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13179,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's description."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 126,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13175,
						13176,
						13177,
						13178,
						13179
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 102,
					"character": 17
				}
			]
		},
		{
			"id": 13180,
			"name": "RemoveShippingMethodAdjustment",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This action indicates that an adjustment must be removed from a shipping method. For example, remove the free shipping discount applied before."
					}
				]
			},
			"children": [
				{
					"id": 13181,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of action"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 136,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "removeShippingMethodAdjustment"
					}
				},
				{
					"id": 13182,
					"name": "adjustment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated adjustment's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 141,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13183,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 146,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13181,
						13182,
						13183
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 132,
					"character": 17
				}
			]
		},
		{
			"id": 13328,
			"name": "ComputeActionAdjustmentLine",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An action's adjustment line."
					}
				]
			},
			"children": [
				{
					"id": 13329,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the compute action's adjustment line."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 156,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13330,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 161,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13329,
						13330
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 152,
					"character": 17
				}
			],
			"indexSignatures": [
				{
					"id": 13331,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 13332,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 13150,
			"name": "ComputeActionItemLine",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A cart's line item passed in the context when computing actions."
					}
				]
			},
			"children": [
				{
					"id": 13151,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the item line."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 171,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13152,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 176,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13149,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13153,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal of the line item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 181,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13149,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13154,
					"name": "adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The adjustments applied before on the line item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 186,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13328,
							"name": "ComputeActionAdjustmentLine",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13151,
						13152,
						13153,
						13154
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 167,
					"character": 17
				}
			],
			"indexSignatures": [
				{
					"id": 13155,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 13156,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 13157,
			"name": "ComputeActionShippingLine",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A cart's shipping method passed in the content when computing actions."
					}
				]
			},
			"children": [
				{
					"id": 13158,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 196,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13159,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal of the shipping method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 201,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13149,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13160,
					"name": "adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The adjustments applied before on the shipping method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 206,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13328,
							"name": "ComputeActionAdjustmentLine",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13158,
						13159,
						13160
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 192,
					"character": 17
				}
			],
			"indexSignatures": [
				{
					"id": 13161,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 13162,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 12992,
			"name": "ComputeActionContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context provided when computing actions of promotions."
					}
				]
			},
			"children": [
				{
					"id": 12993,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The cart's currency"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 216,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 12994,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The cart's line items."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 221,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13150,
							"name": "ComputeActionItemLine",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 12995,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The cart's shipping methods."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 226,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13157,
							"name": "ComputeActionShippingLine",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						12993,
						12994,
						12995
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 212,
					"character": 17
				}
			],
			"indexSignatures": [
				{
					"id": 12996,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 12997,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 13271,
			"name": "PromotionRuleValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion rule value details."
					}
				]
			},
			"children": [
				{
					"id": 13272,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the promotion rule value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule-value.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13273,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the promotion rule value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule-value.ts",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13272,
						13273
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule-value.ts",
					"line": 7,
					"character": 17
				}
			]
		},
		{
			"id": 13270,
			"name": "PromotionRuleOperatorValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible operators to use in a promotion rule."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
					"line": 7,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "gt"
					},
					{
						"type": "literal",
						"value": "lt"
					},
					{
						"type": "literal",
						"value": "eq"
					},
					{
						"type": "literal",
						"value": "ne"
					},
					{
						"type": "literal",
						"value": "in"
					},
					{
						"type": "literal",
						"value": "lte"
					},
					{
						"type": "literal",
						"value": "gte"
					}
				]
			}
		},
		{
			"id": 13072,
			"name": "PromotionRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion rule details."
					}
				]
			},
			"children": [
				{
					"id": 13073,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 23,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13074,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13075,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 33,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13076,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13270,
						"name": "PromotionRuleOperatorValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13077,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13271,
							"name": "PromotionRuleValueDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13073,
						13074,
						13075,
						13076,
						13077
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
					"line": 19,
					"character": 17
				}
			]
		},
		{
			"id": 13067,
			"name": "CreatePromotionRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion rule to be created."
					}
				]
			},
			"children": [
				{
					"id": 13068,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 53,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13069,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 58,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13070,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 63,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13270,
						"name": "PromotionRuleOperatorValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13071,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values of the promotion rule.\nWhen provided, "
							},
							{
								"kind": "code",
								"text": "`PromotionRuleValue`"
							},
							{
								"kind": "text",
								"text": " records are\ncreated and associated with the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13068,
						13069,
						13070,
						13071
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
					"line": 49,
					"character": 17
				}
			]
		},
		{
			"id": 13106,
			"name": "UpdatePromotionRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the promotion rule."
					}
				]
			},
			"children": [
				{
					"id": 13107,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13108,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 85,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13109,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 90,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13110,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 95,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13270,
						"name": "PromotionRuleOperatorValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13111,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values of the promotion rule.\nWhen provided, "
							},
							{
								"kind": "code",
								"text": "`PromotionRuleValue`"
							},
							{
								"kind": "text",
								"text": " records are\ncreated and associated with the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 102,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13107,
						13108,
						13109,
						13110,
						13111
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
					"line": 76,
					"character": 17
				}
			]
		},
		{
			"id": 13102,
			"name": "FilterablePromotionRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved promotion rules."
					}
				]
			},
			"children": [
				{
					"id": 13104,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13102,
									"name": "FilterablePromotionRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13239,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13102,
											"name": "FilterablePromotionRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13240,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 13105,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13102,
									"name": "FilterablePromotionRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13239,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13102,
											"name": "FilterablePromotionRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13241,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 13103,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the promotion rules by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 123,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13104,
						13105,
						13103
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
					"line": 118,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 13239,
					"typeArguments": [
						{
							"type": "reference",
							"target": 13102,
							"name": "FilterablePromotionRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 13187,
			"name": "PromotionTypeValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion's possible types."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "standard"
					},
					{
						"type": "literal",
						"value": "buyget"
					}
				]
			}
		},
		{
			"id": 13188,
			"name": "PromotionStatusValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion's possible types."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
					"line": 19,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "draft"
					},
					{
						"type": "literal",
						"value": "active"
					},
					{
						"type": "literal",
						"value": "inactive"
					}
				]
			}
		},
		{
			"id": 13021,
			"name": "PromotionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion details."
					}
				]
			},
			"children": [
				{
					"id": 13022,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 33,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13023,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13024,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the promotion:\n\n- "
							},
							{
								"kind": "code",
								"text": "`standard`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is a standard one applied with conditions.\n- "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is a \"Buy X get Y\" promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13187,
						"name": "PromotionTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13025,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the promotion:\n\n- "
							},
							{
								"kind": "code",
								"text": "`active`"
							},
							{
								"kind": "text",
								"text": " promotion is available for user to consume\n- "
							},
							{
								"kind": "code",
								"text": "`inactive`"
							},
							{
								"kind": "text",
								"text": " promotion is no longer available to the user\n- "
							},
							{
								"kind": "code",
								"text": "`draft`"
							},
							{
								"kind": "text",
								"text": " promotion is currently being prepared"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13188,
						"name": "PromotionStatusValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13026,
					"name": "is_automatic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the promotion is applied automatically."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 61,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13027,
					"name": "application_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 66,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13215,
						"name": "ApplicationMethodDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13028,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 71,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13072,
							"name": "PromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13029,
					"name": "campaign_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 76,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13030,
					"name": "campaign",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13085,
						"name": "CampaignDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13022,
						13023,
						13024,
						13025,
						13026,
						13027,
						13028,
						13029,
						13030
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
					"line": 29,
					"character": 17
				}
			]
		},
		{
			"id": 12999,
			"name": "CreatePromotionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion to be created."
					}
				]
			},
			"children": [
				{
					"id": 13000,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13001,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the promotion:\n\n- "
							},
							{
								"kind": "code",
								"text": "`standard`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is a standard one applied with conditions.\n- "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is a \"Buy X get Y\" promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13187,
						"name": "PromotionTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13002,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the promotion:\n\n- "
							},
							{
								"kind": "code",
								"text": "`draft`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is currently being prepared\n- "
							},
							{
								"kind": "code",
								"text": "`active`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is active\n- "
							},
							{
								"kind": "code",
								"text": "`inactive`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is no longer active"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 109,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13188,
						"name": "PromotionStatusValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13003,
					"name": "is_automatic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the promotion is applied automatically."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 114,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13004,
					"name": "application_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 119,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13189,
						"name": "CreateApplicationMethodDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13005,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 124,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13067,
							"name": "CreatePromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13006,
					"name": "campaign",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 129,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13078,
						"name": "CreateCampaignDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13007,
					"name": "campaign_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 134,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13000,
						13001,
						13002,
						13003,
						13004,
						13005,
						13006,
						13007
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
					"line": 87,
					"character": 17
				}
			]
		},
		{
			"id": 13031,
			"name": "UpdatePromotionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the promotion."
					}
				]
			},
			"children": [
				{
					"id": 13032,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 144,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13033,
					"name": "is_automatic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the promotion is applied automatically."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 149,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13034,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 154,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13035,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 159,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13187,
						"name": "PromotionTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13036,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the promotion:\n\n- "
							},
							{
								"kind": "code",
								"text": "`draft`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is currently being prepared\n- "
							},
							{
								"kind": "code",
								"text": "`active`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is active\n- "
							},
							{
								"kind": "code",
								"text": "`inactive`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is no longer active"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 168,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13188,
						"name": "PromotionStatusValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13037,
					"name": "application_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 173,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 13228,
								"name": "UpdateApplicationMethodDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "literal",
								"value": "id"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				},
				{
					"id": 13038,
					"name": "campaign_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 178,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13032,
						13033,
						13034,
						13035,
						13036,
						13037,
						13038
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
					"line": 140,
					"character": 17
				}
			]
		},
		{
			"id": 13039,
			"name": "FilterablePromotionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved promotions."
					}
				]
			},
			"children": [
				{
					"id": 13048,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13039,
									"name": "FilterablePromotionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13239,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13039,
											"name": "FilterablePromotionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13240,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 13049,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13039,
									"name": "FilterablePromotionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13239,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13039,
											"name": "FilterablePromotionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13241,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 13040,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the promotions by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 189,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13041,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the promotions by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 194,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 13042,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter promotions by their code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 199,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 13243,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 13043,
					"name": "budget_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter promotions by the ID of their associated campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 204,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 13243,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 13044,
					"name": "is_automatic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter promotions by whether they're applied automatically."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 209,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13045,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter promotions by their type."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 214,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13187,
							"name": "PromotionTypeValues",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13046,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter promotions by their status."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13188,
							"name": "PromotionStatusValues",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13047,
					"name": "campaign",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter promotions by their campaign"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 224,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13112,
						"name": "FilterableCampaignProps",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13048,
						13049,
						13040,
						13041,
						13042,
						13043,
						13044,
						13045,
						13046,
						13047
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
					"line": 184,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 13239,
					"typeArguments": [
						{
							"type": "reference",
							"target": 13039,
							"name": "FilterablePromotionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 13274,
			"name": "CreateCampaignBudgetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The campaign budget to be created."
					}
				]
			},
			"children": [
				{
					"id": 13275,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13361,
						"name": "CampaignBudgetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13276,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The limit of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13277,
					"name": "used",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "How much is used of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13278,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 25,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13275,
						13276,
						13277,
						13278
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 13285,
			"name": "UpdateCampaignBudgetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the campaign budget."
					}
				]
			},
			"children": [
				{
					"id": 13286,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13287,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 40,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13361,
						"name": "CampaignBudgetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13288,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The limit of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 45,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13289,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The limit of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13290,
					"name": "used",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "How much is used of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13286,
						13287,
						13288,
						13289,
						13290
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
					"line": 31,
					"character": 17
				}
			]
		},
		{
			"id": 13078,
			"name": "CreateCampaignDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The campaign to be created."
					}
				]
			},
			"children": [
				{
					"id": 13079,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13080,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13081,
					"name": "campaign_identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The campaign identifier of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13082,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The start date of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 13083,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The end date of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 85,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 13084,
					"name": "budget",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 90,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 13274,
								"name": "CreateCampaignBudgetDTO",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13079,
						13080,
						13081,
						13082,
						13083,
						13084
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
					"line": 61,
					"character": 17
				}
			]
		},
		{
			"id": 13094,
			"name": "UpdateCampaignDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the campaign."
					}
				]
			},
			"children": [
				{
					"id": 13095,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13096,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 105,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13097,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 110,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13098,
					"name": "campaign_identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The campaign identifier of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 115,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13099,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The start date of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 120,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 13100,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The end date of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 125,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 13101,
					"name": "budget",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The budget of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 130,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 13285,
								"name": "UpdateCampaignBudgetDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "literal",
								"value": "id"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13095,
						13096,
						13097,
						13098,
						13099,
						13100,
						13101
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
					"line": 96,
					"character": 17
				}
			]
		},
		{
			"id": 13118,
			"name": "AddPromotionsToCampaignDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13119,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 137,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13120,
					"name": "promotion_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Ids of promotions to add"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 142,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13119,
						13120
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
					"line": 133,
					"character": 17
				}
			]
		},
		{
			"id": 13121,
			"name": "RemovePromotionsFromCampaignDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13122,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 149,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13123,
					"name": "promotion_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Ids of promotions to add"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 154,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13122,
						13123
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
					"line": 145,
					"character": 17
				}
			]
		},
		{
			"id": 12802,
			"name": "IPromotionModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Promotion Module."
					}
				]
			},
			"children": [
				{
					"id": 12803,
					"name": "registerUsage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 51,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L51"
						}
					],
					"signatures": [
						{
							"id": 12804,
							"name": "registerUsage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adjusts the budget for each campaign associated with the promotions' specified computed actions.\nIt adjusts the "
									},
									{
										"kind": "code",
										"text": "`used`"
									},
									{
										"kind": "text",
										"text": " property of a "
									},
									{
										"kind": "code",
										"text": "`CampaignBudget`"
									},
									{
										"kind": "text",
										"text": " to account for the adjustment amounts in the specified associated\ncomputed actions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the campaign budgets have been adjusted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.registerUsage([\n  {\n    amount: 50,\n    code: \"50OFF\",\n  },\n  {\n    amount: 5000,\n    code: \"FREESHIPPING\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L51"
								}
							],
							"parameters": [
								{
									"id": 12805,
									"name": "computedActions",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The computed actions to adjust their promotion's campaign budget."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12988,
											"name": "UsageComputedActions",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12806,
					"name": "revertUsage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 71,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L71"
						}
					],
					"signatures": [
						{
							"id": 12807,
							"name": "revertUsage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to revert the changes made by registerUsage action"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the campaign budgets have been adjusted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.revertUsage([\n  {\n    amount: 50,\n    code: \"50OFF\",\n  },\n  {\n    amount: 5000,\n    code: \"FREESHIPPING\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 71,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L71"
								}
							],
							"parameters": [
								{
									"id": 12808,
									"name": "computedActions",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The computed actions to adjust their promotion's campaign budget."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12988,
											"name": "UsageComputedActions",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12809,
					"name": "computeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 108,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L108"
						}
					],
					"signatures": [
						{
							"id": 12810,
							"name": "computeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method provides the actions to perform on a cart based on the specified promotions\nand context."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of computed actions to be applied on the cart."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst actions = await promotionModuleService.computeActions(\n  [\"50OFF\"],\n  {\n    items: [\n      {\n        id: \"cali_123\",\n        quantity: 2,\n        subtotal: 1000,\n      },\n    ],\n    shipping_methods: [\n      {\n        id: \"casm_123\",\n        subtotal: 0,\n        adjustments: [\n          {\n            id: \"adj_123\",\n            code: \"FREESHIPPING\",\n          },\n        ],\n      },\n    ],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 108,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L108"
								}
							],
							"parameters": [
								{
									"id": 12811,
									"name": "promotionCodesToApply",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion codes to be applied on the cart."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 12812,
									"name": "applicationContext",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The items and shipping methods of the cart."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12992,
										"name": "ComputeActionContext",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12813,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any relevant options that may change how the actions are computed."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12998,
											"name": "ComputeActions",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12814,
					"name": "createPromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 160,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L160"
						},
						{
							"fileName": "promotion/service.ts",
							"line": 211,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L211"
						}
					],
					"signatures": [
						{
							"id": 12815,
							"name": "createPromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates promotions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created promotions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst promotions = await promotionModuleService.createPromotions([\n  {\n    code: \"50OFF\",\n    type: \"standard\",\n    application_method: {\n      type: \"percentage\",\n      target_type: \"items\",\n      value: 50,\n    },\n  },\n  {\n    code: \"FREESHIPPING\",\n    type: \"standard\",\n    application_method: {\n      type: \"percentage\",\n      target_type: \"shipping_methods\",\n      value: 100,\n    },\n  },\n  {\n    code: \"BUY2GET1\",\n    type: \"buyget\",\n    application_method: {\n      type: \"fixed\",\n      target_type: \"items\",\n      buy_rules_min_quantity: 2,\n      apply_to_quantity: 1,\n      buy_rules: [\n        {\n          attribute: \"SKU\",\n          operator: \"eq\",\n          values: [\"SHIRT\"],\n        },\n      ],\n    },\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 160,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L160"
								}
							],
							"parameters": [
								{
									"id": 12816,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotions to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 12999,
											"name": "CreatePromotionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 12817,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13021,
											"name": "PromotionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 12818,
							"name": "createPromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a promotion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created promotion."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst promotionA = await promotionModuleService.createPromotions({\n  code: \"50OFF\",\n  type: \"standard\",\n  application_method: {\n    type: \"percentage\",\n    target_type: \"items\",\n    value: 50,\n  },\n})\n\nconst promotionB = await promotionModuleService.createPromotions({\n  code: \"FREESHIPPING\",\n  type: \"standard\",\n  application_method: {\n    type: \"percentage\",\n    target_type: \"shipping_methods\",\n    value: 100,\n  },\n})\n\nconst promotionC = await promotionModuleService.createPromotions({\n  code: \"BUY2GET1\",\n  type: \"buyget\",\n  application_method: {\n    type: \"fixed\",\n    target_type: \"items\",\n    buy_rules_min_quantity: 2,\n    apply_to_quantity: 1,\n    buy_rules: [\n      {\n        attribute: \"SKU\",\n        operator: \"eq\",\n        values: [\"SHIRT\"],\n      },\n    ],\n  },\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 211,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L211"
								}
							],
							"parameters": [
								{
									"id": 12819,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 12999,
										"name": "CreatePromotionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12820,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13021,
										"name": "PromotionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12821,
					"name": "updatePromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 231,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L231"
						},
						{
							"fileName": "promotion/service.ts",
							"line": 249,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L249"
						}
					],
					"signatures": [
						{
							"id": 12822,
							"name": "updatePromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing promotions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated promotions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst promotions = await promotionModuleService.updatePromotions([\n  {\n    id: \"promo_123\",\n    is_automatic: true,\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 231,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L231"
								}
							],
							"parameters": [
								{
									"id": 12823,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the promotions."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13031,
											"name": "UpdatePromotionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 12824,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13021,
											"name": "PromotionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 12825,
							"name": "updatePromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing promotion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated promotion."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst promotion = await promotionModuleService.updatePromotions({\n  id: \"promo_123\",\n  is_automatic: true,\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 249,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L249"
								}
							],
							"parameters": [
								{
									"id": 12826,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the promotion."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13031,
										"name": "UpdatePromotionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12827,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13021,
										"name": "PromotionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12828,
					"name": "listPromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 300,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L300"
						}
					],
					"signatures": [
						{
							"id": 12829,
							"name": "listPromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of promotions based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of promotions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of promotions using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotions = await promotionModuleService.listPromotions({\n  id: [\"promo_123\", \"promo_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the promotions:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotions = await promotionModuleService.listPromotions(\n  {\n    id: [\"promo_123\", \"promo_321\"],\n  },\n  {\n    relations: [\"application_method\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotions = await promotionModuleService.listPromotions(\n  {\n    id: [\"promo_123\", \"promo_321\"],\n  },\n  {\n    relations: [\"application_method\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 300,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L300"
								}
							],
							"parameters": [
								{
									"id": 12830,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved promotions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13039,
										"name": "FilterablePromotionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12831,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the promotion is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a promotion."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13050,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13021,
												"name": "PromotionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12832,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13021,
											"name": "PromotionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12833,
					"name": "listAndCountPromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 355,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L355"
						}
					],
					"signatures": [
						{
							"id": 12834,
							"name": "listAndCountPromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of promotions along with the total count of available promotions satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of promotions along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of promotions using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [promotions, count] =\n  await promotionModuleService.listAndCountPromotions({\n    id: [\"promo_123\", \"promo_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the promotions:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [promotions, count] =\n  await promotionModuleService.listAndCountPromotions(\n    {\n      id: [\"promo_123\", \"promo_321\"],\n    },\n    {\n      relations: [\"application_method\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [promotions, count] =\n  await promotionModuleService.listAndCountPromotions(\n    {\n      id: [\"promo_123\", \"promo_321\"],\n    },\n    {\n      relations: [\"application_method\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 355,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L355"
								}
							],
							"parameters": [
								{
									"id": 12835,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved promotions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13039,
										"name": "FilterablePromotionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12836,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the promotion is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a promotion."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13050,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13021,
												"name": "PromotionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12837,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 13021,
													"name": "PromotionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12838,
					"name": "retrievePromotion",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 389,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L389"
						}
					],
					"signatures": [
						{
							"id": 12839,
							"name": "retrievePromotion",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a promotion by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved promotion."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a promotion by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotion =\n  await promotionModuleService.retrievePromotion(\"promo_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotion = await promotionModuleService.retrievePromotion(\n  \"promo_123\",\n  {\n    relations: [\"application_method\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 389,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L389"
								}
							],
							"parameters": [
								{
									"id": 12840,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the promotion."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12841,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the promotion is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a promotion."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13050,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13021,
												"name": "PromotionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12842,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13021,
										"name": "PromotionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12843,
					"name": "deletePromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 408,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L408"
						},
						{
							"fileName": "promotion/service.ts",
							"line": 420,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L420"
						}
					],
					"signatures": [
						{
							"id": 12844,
							"name": "deletePromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes promotions by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the promotions are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.deletePromotions([\n  \"promo_123\",\n  \"promo_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 408,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L408"
								}
							],
							"parameters": [
								{
									"id": 12845,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the promotion."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 12846,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 12847,
							"name": "deletePromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a promotion by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the promotion is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.deletePromotions(\"promo_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 420,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L420"
								}
							],
							"parameters": [
								{
									"id": 12848,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the promotion."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12849,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12850,
					"name": "softDeletePromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 437,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L437"
						}
					],
					"signatures": [
						{
							"id": 12851,
							"name": "softDeletePromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes a promotion by its IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated application method.\nThe object's keys are the ID attribute names of the promotion entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`application_method_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the promotion through this relation, such as the IDs of associated application method.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.softDeletePromotions(\"promo_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 437,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L437"
								}
							],
							"typeParameters": [
								{
									"id": 12852,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 12853,
									"name": "promotionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of promotions to soft delete."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 12854,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13061,
										"typeArguments": [
											{
												"type": "reference",
												"target": 12852,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12855,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12856,
					"name": "restorePromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 460,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L460"
						}
					],
					"signatures": [
						{
							"id": 12857,
							"name": "restorePromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted promotions by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated application method.\nThe object's keys are the ID attribute names of the promotion entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`application_method_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the promotion through this relation,\nsuch as the IDs of associated application method.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.restorePromotions(\"promo_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 460,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L460"
								}
							],
							"typeParameters": [
								{
									"id": 12858,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 12859,
									"name": "promotionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotions' IDs."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 12860,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the promotion. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the promotion's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`application_method_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13064,
										"typeArguments": [
											{
												"type": "reference",
												"target": 12858,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12861,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12862,
					"name": "addPromotionRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 487,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L487"
						}
					],
					"signatures": [
						{
							"id": 12863,
							"name": "addPromotionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds promotion rules to a promotion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The promotion rules created."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst promotionRules =\n  await promotionModuleService.addPromotionRules(\n    \"promo_123\",\n    [\n      {\n        attribute: \"customer_group_id\",\n        operator: \"in\",\n        values: [\"VIP\", \"VVIP\"],\n      },\n    ]\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 487,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L487"
								}
							],
							"parameters": [
								{
									"id": 12864,
									"name": "promotionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12865,
									"name": "rulesData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion rules to be created and added to the promotion."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13067,
											"name": "CreatePromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 12866,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13072,
											"name": "PromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12867,
					"name": "addPromotionTargetRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 514,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L514"
						}
					],
					"signatures": [
						{
							"id": 12868,
							"name": "addPromotionTargetRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds target promotion rules to a promotion's application method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created promotion rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst targetPromotionRules =\n  await promotionModuleService.addPromotionTargetRules(\n    \"promo_123\",\n    [\n      {\n        attribute: \"SKU\",\n        operator: \"eq\",\n        values: \"SHIRT\",\n      },\n    ]\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 514,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L514"
								}
							],
							"parameters": [
								{
									"id": 12869,
									"name": "promotionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12870,
									"name": "rulesData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion rules to be created and added as target rules to the promotion's application method."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13067,
											"name": "CreatePromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 12871,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13072,
											"name": "PromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12872,
					"name": "addPromotionBuyRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 541,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L541"
						}
					],
					"signatures": [
						{
							"id": 12873,
							"name": "addPromotionBuyRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds buy promotion rules to a promotion's application method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created promotion rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst buyPromotionRules =\n  await promotionModuleService.addPromotionBuyRules(\n    \"promo_123\",\n    [\n      {\n        attribute: \"SKU\",\n        operator: \"eq\",\n        values: \"SHIRT\",\n      },\n    ]\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 541,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L541"
								}
							],
							"parameters": [
								{
									"id": 12874,
									"name": "promotionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12875,
									"name": "rulesData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion rules to be created and added as buy rules to the promotion's applicatio method."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13067,
											"name": "CreatePromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 12876,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13072,
											"name": "PromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12877,
					"name": "removePromotionRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 561,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L561"
						}
					],
					"signatures": [
						{
							"id": 12878,
							"name": "removePromotionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method removes promotion rules from a promotion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the promotion rules are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.removePromotionRules(\n  \"promo_123\",\n  [\"prorul_123\", \"prorul_321\"]\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 561,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L561"
								}
							],
							"parameters": [
								{
									"id": 12879,
									"name": "promotionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12880,
									"name": "ruleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion rules' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 12881,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12882,
					"name": "removePromotionTargetRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 581,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L581"
						}
					],
					"signatures": [
						{
							"id": 12883,
							"name": "removePromotionTargetRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method removes target promotion rules from a promotion's application method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the target promotion rules are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.removePromotionTargetRules(\n  \"promo_123\",\n  [\"prorul_123\", \"prorul_321\"]\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 581,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L581"
								}
							],
							"parameters": [
								{
									"id": 12884,
									"name": "promotionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12885,
									"name": "ruleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The target promotion rules' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 12886,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12887,
					"name": "removePromotionBuyRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 601,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L601"
						}
					],
					"signatures": [
						{
							"id": 12888,
							"name": "removePromotionBuyRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method removes buy promotion rules from a promotion's application method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the buy promotion rules are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.removePromotionBuyRules(\n  \"promo_123\",\n  [\"prorul_123\", \"prorul_321\"]\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 601,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L601"
								}
							],
							"parameters": [
								{
									"id": 12889,
									"name": "promotionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12890,
									"name": "ruleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The buy promotion rules' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 12891,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12892,
					"name": "createCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 628,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L628"
						},
						{
							"fileName": "promotion/service.ts",
							"line": 655,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L655"
						}
					],
					"signatures": [
						{
							"id": 12893,
							"name": "createCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a campaign."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created campaign."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst campaign = await promotionModuleService.createCampaigns(\n  {\n    name: \"Summer discounts\",\n    campaign_identifier: \"G-123456\",\n    starts_at: new Date(\"2025-06-01\"),\n    ends_at: new Date(\"2025-09-01\"),\n    budget: {\n      type: \"usage\",\n      limit: 10,\n    },\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 628,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L628"
								}
							],
							"parameters": [
								{
									"id": 12894,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The campaign to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13078,
										"name": "CreateCampaignDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12895,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13085,
										"name": "CampaignDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 12896,
							"name": "createCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates campaigns."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created campaigns."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst campaigns =\n  await promotionModuleService.createCampaigns([\n    {\n      name: \"Summer discounts\",\n      campaign_identifier: \"G-123456\",\n      starts_at: new Date(\"2025-06-01\"),\n      ends_at: new Date(\"2025-09-01\"),\n      budget: {\n        type: \"usage\",\n        limit: 10,\n      },\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 655,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L655"
								}
							],
							"parameters": [
								{
									"id": 12897,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The campaigns to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13078,
											"name": "CreateCampaignDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 12898,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13085,
											"name": "CampaignDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12899,
					"name": "updateCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 676,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L676"
						},
						{
							"fileName": "promotion/service.ts",
							"line": 695,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L695"
						}
					],
					"signatures": [
						{
							"id": 12900,
							"name": "updateCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing campaigns."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated campaigns."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst campaigns =\n  await promotionModuleService.updateCampaigns([\n    {\n      id: \"procamp_123\",\n      name: \"Summer Sales\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 676,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L676"
								}
							],
							"parameters": [
								{
									"id": 12901,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the campaigns."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13094,
											"name": "UpdateCampaignDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 12902,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13085,
											"name": "CampaignDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 12903,
							"name": "updateCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing campaign."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated campaign."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst campaigns =\n  await promotionModuleService.updateCampaigns({\n    id: \"procamp_123\",\n    name: \"Summer Sales\",\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 695,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L695"
								}
							],
							"parameters": [
								{
									"id": 12904,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the campaign."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13094,
										"name": "UpdateCampaignDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12905,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13085,
										"name": "CampaignDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12906,
					"name": "listPromotionRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 749,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L749"
						}
					],
					"signatures": [
						{
							"id": 12907,
							"name": "listPromotionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of promotion rules based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of promotion rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of promotion rules using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotionRules =\n  await promotionModuleService.listPromotionRules({\n    id: [\"prorul_123\", \"prorul_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the promotion rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotionRules =\n  await promotionModuleService.listPromotionRules(\n    {\n      id: [\"prorul_123\", \"prorul_321\"],\n    },\n    {\n      relations: [\"promotions\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotionRules =\n  await promotionModuleService.listPromotionRules(\n    {\n      id: [\"prorul_123\", \"prorul_321\"],\n    },\n    {\n      relations: [\"promotions\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 749,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L749"
								}
							],
							"parameters": [
								{
									"id": 12908,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved promotion rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13102,
										"name": "FilterablePromotionRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12909,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the promotion rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a promotion rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13050,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13072,
												"name": "PromotionRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12910,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13072,
											"name": "PromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12911,
					"name": "updatePromotionRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 771,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L771"
						}
					],
					"signatures": [
						{
							"id": 12912,
							"name": "updatePromotionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing promotion rules."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated promotion rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst promotionRules =\n  await promotionModuleService.updatePromotionRules([\n    {\n      id: \"prorul_123\",\n      description: \"Only allow VIP customers\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 771,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L771"
								}
							],
							"parameters": [
								{
									"id": 12913,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the promotion rules."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13106,
											"name": "UpdatePromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 12914,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13072,
											"name": "PromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12915,
					"name": "listCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 822,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L822"
						}
					],
					"signatures": [
						{
							"id": 12916,
							"name": "listCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of campaigns based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of campaigns."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of campaigns using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst campaigns = await promotionModuleService.listCampaigns({\n  id: [\"procamp_123\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the campaigns:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst campaigns = await promotionModuleService.listCampaigns(\n  {\n    id: [\"procamp_123\"],\n  },\n  {\n    relations: [\"promotions\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst campaigns = await promotionModuleService.listCampaigns(\n  {\n    id: [\"procamp_123\"],\n  },\n  {\n    relations: [\"promotions\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 822,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L822"
								}
							],
							"parameters": [
								{
									"id": 12917,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved campaigns."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13112,
										"name": "FilterableCampaignProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12918,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the campaign is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a campaign."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13050,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13085,
												"name": "CampaignDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12919,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13085,
											"name": "CampaignDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12920,
					"name": "listAndCountCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 877,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L877"
						}
					],
					"signatures": [
						{
							"id": 12921,
							"name": "listAndCountCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of campaigns along with the total count of available campaigns satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of campaigns along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of campaigns using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [campaigns, count] =\n  await promotionModuleService.listAndCountCampaigns({\n    id: [\"procamp_123\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the campaigns:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [campaigns, count] =\n  await promotionModuleService.listAndCountCampaigns(\n    {\n      id: [\"procamp_123\"],\n    },\n    {\n      relations: [\"promotions\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [campaigns, count] =\n  await promotionModuleService.listAndCountCampaigns(\n    {\n      id: [\"procamp_123\"],\n    },\n    {\n      relations: [\"promotions\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 877,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L877"
								}
							],
							"parameters": [
								{
									"id": 12922,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved campaigns."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13112,
										"name": "FilterableCampaignProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12923,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the campaign is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a campaign."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13050,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13085,
												"name": "CampaignDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12924,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 13085,
													"name": "CampaignDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12925,
					"name": "retrieveCampaign",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 912,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L912"
						}
					],
					"signatures": [
						{
							"id": 12926,
							"name": "retrieveCampaign",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a campaigns by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved campaigns."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a promotion by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst campaign =\n  await promotionModuleService.retrieveCampaign(\"procamp_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst campaign =\n  await promotionModuleService.retrieveCampaign(\n    \"procamp_123\",\n    {\n      relations: [\"promotions\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 912,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L912"
								}
							],
							"parameters": [
								{
									"id": 12927,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the campaigns."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12928,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the campaign is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a campaign."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13050,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13085,
												"name": "CampaignDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12929,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13085,
										"name": "CampaignDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12930,
					"name": "deleteCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 928,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L928"
						},
						{
							"fileName": "promotion/service.ts",
							"line": 940,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L940"
						}
					],
					"signatures": [
						{
							"id": 12931,
							"name": "deleteCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes campaigns by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the campaigns are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.deleteCampaigns([\"procamp_123\"])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 928,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L928"
								}
							],
							"parameters": [
								{
									"id": 12932,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the campaigns."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 12933,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 12934,
							"name": "deleteCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a campaign by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the campaign is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.deleteCampaigns(\"procamp_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 940,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L940"
								}
							],
							"parameters": [
								{
									"id": 12935,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the campaign."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 12936,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12937,
					"name": "softDeleteCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 962,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L962"
						}
					],
					"signatures": [
						{
							"id": 12938,
							"name": "softDeleteCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes campaigns by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated campaign budget.\nThe object's keys are the ID attribute names of the campaign entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`budget_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the campaign through this relation, such as the IDs of associated campaign budget.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.softDeleteCampaigns(\n  \"procamp_123\",\n  {\n    returnLinkableKeys: [\"budget_id\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 962,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L962"
								}
							],
							"typeParameters": [
								{
									"id": 12939,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 12940,
									"name": "campaignIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the campaigns."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 12941,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13061,
										"typeArguments": [
											{
												"type": "reference",
												"target": 12939,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12942,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12943,
					"name": "restoreCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 987,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L987"
						}
					],
					"signatures": [
						{
							"id": 12944,
							"name": "restoreCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted campaigns by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated campaign budget.\nThe object's keys are the ID attribute names of the campaign entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`budget_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the campaign through this relation,\nsuch as the IDs of associated campaign budget.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.restoreCampaigns(\"procamp_123\", {\n  returnLinkableKeys: [\"budget_id\"],\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 987,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L987"
								}
							],
							"typeParameters": [
								{
									"id": 12945,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 12946,
									"name": "campaignIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the campaigns"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 12947,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the campaigns. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the campaign's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`budget_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13064,
										"typeArguments": [
											{
												"type": "reference",
												"target": 12945,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12948,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12949,
					"name": "addPromotionsToCampaign",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 993,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L993"
						}
					],
					"signatures": [
						{
							"id": 12950,
							"name": "addPromotionsToCampaign",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 993,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L993"
								}
							],
							"parameters": [
								{
									"id": 12951,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 13118,
										"name": "AddPromotionsToCampaignDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12952,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 12953,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 12954,
													"name": "ids",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "promotion/service.ts",
															"line": 996,
															"character": 15,
															"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L996"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														12954
													]
												}
											],
											"sources": [
												{
													"fileName": "promotion/service.ts",
													"line": 996,
													"character": 13,
													"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L996"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12955,
					"name": "removePromotionsFromCampaign",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 998,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L998"
						}
					],
					"signatures": [
						{
							"id": 12956,
							"name": "removePromotionsFromCampaign",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 998,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L998"
								}
							],
							"parameters": [
								{
									"id": 12957,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 13121,
										"name": "RemovePromotionsFromCampaignDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12958,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 13008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 12959,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 12960,
													"name": "ids",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "promotion/service.ts",
															"line": 1001,
															"character": 15,
															"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L1001"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														12960
													]
												}
											],
											"sources": [
												{
													"fileName": "promotion/service.ts",
													"line": 1001,
													"character": 13,
													"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L1001"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						12803,
						12806,
						12809,
						12814,
						12821,
						12828,
						12833,
						12838,
						12843,
						12850,
						12856,
						12862,
						12867,
						12872,
						12877,
						12882,
						12887,
						12892,
						12899,
						12906,
						12911,
						12915,
						12920,
						12925,
						12930,
						12937,
						12943,
						12949,
						12955
					]
				}
			],
			"sources": [
				{
					"fileName": "promotion/service.ts",
					"line": 30,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/03344a0ee0b6540944f49fcebffd8d10e6bf67b1/packages/core/types/src/promotion/service.ts#L30"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 12974,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 13340,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13341,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 13342,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 13343,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 6,
									"character": 11
								}
							],
							"indexSignatures": [
								{
									"id": 13344,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
											"line": 6,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 13345,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 13346,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13341,
						13342,
						13346
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 13201,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13202,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 15,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13203,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 15,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 13204,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 13336,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 13336,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 13205,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 16,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13206,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 16,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 13207,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 13340,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13336,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13208,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 17,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13209,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 17,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 13210,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 18,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13211,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 18,
									"character": 2
								}
							],
							"typeParameters": [
								{
									"id": 13212,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 13213,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 13347,
												"typeArguments": [
													{
														"type": "reference",
														"target": 13212,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 13347,
													"typeArguments": [
														{
															"type": "reference",
															"target": 13212,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 13214,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						13202,
						13205,
						13208,
						13210
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 13008,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 13009,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 13010,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13020,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 13011,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13020,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 13012,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13013,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13014,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13015,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13016,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13201,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13017,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13018,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13019,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13009,
						13010,
						13011,
						13012,
						13013,
						13014,
						13015,
						13016,
						13017,
						13018,
						13019
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
					"line": 30,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13020,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 13320,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13321,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13322,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13315,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13323,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 13324,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 8,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13325,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 13326,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 9,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13327,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 9,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13321,
						13322,
						13323
					]
				},
				{
					"title": "Methods",
					"children": [
						13324,
						13326
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 13315,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 12,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13316,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13317,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13317
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 12,
							"character": 32
						}
					],
					"indexSignatures": [
						{
							"id": 13318,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 14,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 13319,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 13149,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 13315,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 13320,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				13050,
				13239,
				13061,
				13064,
				13362,
				13291,
				12974,
				13215,
				13189,
				13228,
				13279,
				13085,
				13112,
				13184,
				13163,
				13169,
				13174,
				13180,
				13328,
				13150,
				13157,
				12992,
				13271,
				13072,
				13067,
				13106,
				13102,
				13021,
				12999,
				13031,
				13039,
				13274,
				13285,
				13078,
				13094,
				13118,
				13121,
				12802,
				13340,
				13201,
				13008,
				13320
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				13265,
				13357,
				13359,
				13382,
				13420,
				13410,
				13243,
				13407,
				13389,
				13409,
				13401,
				13386,
				13391,
				13376,
				13336,
				13347,
				13366,
				13394,
				13309,
				13124,
				13306,
				13333,
				13334,
				13335,
				13361,
				12998,
				12988,
				13270,
				13187,
				13188,
				13315,
				13149
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"12801": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": ""
		},
		"12802": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService"
		},
		"12803": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.registerUsage"
		},
		"12804": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.registerUsage"
		},
		"12805": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "computedActions"
		},
		"12806": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.revertUsage"
		},
		"12807": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.revertUsage"
		},
		"12808": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "computedActions"
		},
		"12809": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.computeActions"
		},
		"12810": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.computeActions"
		},
		"12811": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionCodesToApply"
		},
		"12812": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "applicationContext"
		},
		"12813": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "options"
		},
		"12814": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createPromotions"
		},
		"12815": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createPromotions"
		},
		"12816": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"12817": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12818": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createPromotions"
		},
		"12819": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"12820": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12821": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updatePromotions"
		},
		"12822": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updatePromotions"
		},
		"12823": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"12824": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12825": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updatePromotions"
		},
		"12826": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"12827": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12828": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listPromotions"
		},
		"12829": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listPromotions"
		},
		"12830": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"12831": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"12832": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12833": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listAndCountPromotions"
		},
		"12834": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listAndCountPromotions"
		},
		"12835": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"12836": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"12837": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12838": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.retrievePromotion"
		},
		"12839": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.retrievePromotion"
		},
		"12840": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "id"
		},
		"12841": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"12842": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12843": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deletePromotions"
		},
		"12844": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deletePromotions"
		},
		"12845": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ids"
		},
		"12846": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12847": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deletePromotions"
		},
		"12848": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ids"
		},
		"12849": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12850": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.softDeletePromotions"
		},
		"12851": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.softDeletePromotions"
		},
		"12852": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"12853": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionIds"
		},
		"12854": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"12855": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12856": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.restorePromotions"
		},
		"12857": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.restorePromotions"
		},
		"12858": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"12859": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionIds"
		},
		"12860": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"12861": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12862": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionRules"
		},
		"12863": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionRules"
		},
		"12864": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"12865": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "rulesData"
		},
		"12866": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12867": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionTargetRules"
		},
		"12868": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionTargetRules"
		},
		"12869": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"12870": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "rulesData"
		},
		"12871": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12872": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionBuyRules"
		},
		"12873": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionBuyRules"
		},
		"12874": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"12875": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "rulesData"
		},
		"12876": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12877": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionRules"
		},
		"12878": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionRules"
		},
		"12879": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"12880": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ruleIds"
		},
		"12881": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12882": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionTargetRules"
		},
		"12883": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionTargetRules"
		},
		"12884": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"12885": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ruleIds"
		},
		"12886": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12887": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionBuyRules"
		},
		"12888": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionBuyRules"
		},
		"12889": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"12890": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ruleIds"
		},
		"12891": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12892": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createCampaigns"
		},
		"12893": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createCampaigns"
		},
		"12894": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"12895": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12896": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createCampaigns"
		},
		"12897": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"12898": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12899": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updateCampaigns"
		},
		"12900": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updateCampaigns"
		},
		"12901": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"12902": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12903": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updateCampaigns"
		},
		"12904": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"12905": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12906": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listPromotionRules"
		},
		"12907": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listPromotionRules"
		},
		"12908": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"12909": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"12910": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12911": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updatePromotionRules"
		},
		"12912": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updatePromotionRules"
		},
		"12913": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"12914": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12915": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listCampaigns"
		},
		"12916": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listCampaigns"
		},
		"12917": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"12918": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"12919": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12920": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listAndCountCampaigns"
		},
		"12921": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listAndCountCampaigns"
		},
		"12922": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"12923": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"12924": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12925": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.retrieveCampaign"
		},
		"12926": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.retrieveCampaign"
		},
		"12927": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "id"
		},
		"12928": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"12929": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12930": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deleteCampaigns"
		},
		"12931": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deleteCampaigns"
		},
		"12932": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ids"
		},
		"12933": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12934": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deleteCampaigns"
		},
		"12935": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ids"
		},
		"12936": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12937": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.softDeleteCampaigns"
		},
		"12938": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.softDeleteCampaigns"
		},
		"12939": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"12940": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "campaignIds"
		},
		"12941": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"12942": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12943": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.restoreCampaigns"
		},
		"12944": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.restoreCampaigns"
		},
		"12945": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"12946": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "campaignIds"
		},
		"12947": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"12948": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12949": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionsToCampaign"
		},
		"12950": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionsToCampaign"
		},
		"12951": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"12952": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12953": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "__type"
		},
		"12954": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "__type.ids"
		},
		"12955": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionsFromCampaign"
		},
		"12956": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionsFromCampaign"
		},
		"12957": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"12958": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12959": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "__type"
		},
		"12960": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "__type.ids"
		},
		"12974": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"12975": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"12976": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"12977": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__hooks"
		},
		"12978": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12979": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationStart"
		},
		"12980": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12981": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12982": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationShutdown"
		},
		"12983": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12984": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12985": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationPrepareShutdown"
		},
		"12986": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12987": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"12988": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "UsageComputedActions"
		},
		"12989": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "__type"
		},
		"12990": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "__type.amount"
		},
		"12991": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "__type.code"
		},
		"12992": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionContext"
		},
		"12993": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionContext.currency_code"
		},
		"12994": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionContext.items"
		},
		"12995": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionContext.shipping_methods"
		},
		"12998": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActions"
		},
		"12999": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO"
		},
		"13000": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.code"
		},
		"13001": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.type"
		},
		"13002": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.status"
		},
		"13003": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.is_automatic"
		},
		"13004": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.application_method"
		},
		"13005": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.rules"
		},
		"13006": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.campaign"
		},
		"13007": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.campaign_id"
		},
		"13008": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"13009": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"13010": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"13011": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"13012": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"13013": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"13014": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"13015": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"13016": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"13017": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"13018": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"13019": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"13020": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"13021": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO"
		},
		"13022": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.id"
		},
		"13023": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.code"
		},
		"13024": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.type"
		},
		"13025": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.status"
		},
		"13026": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.is_automatic"
		},
		"13027": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.application_method"
		},
		"13028": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.rules"
		},
		"13029": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.campaign_id"
		},
		"13030": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.campaign"
		},
		"13031": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO"
		},
		"13032": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.id"
		},
		"13033": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.is_automatic"
		},
		"13034": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.code"
		},
		"13035": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.type"
		},
		"13036": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.status"
		},
		"13037": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.application_method"
		},
		"13038": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.campaign_id"
		},
		"13039": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps"
		},
		"13040": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.q"
		},
		"13041": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.id"
		},
		"13042": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.code"
		},
		"13043": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.budget_id"
		},
		"13044": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.is_automatic"
		},
		"13045": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.type"
		},
		"13046": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.status"
		},
		"13047": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.campaign"
		},
		"13048": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"13049": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"13050": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"13051": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"13052": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"13053": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"13054": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"13055": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"13056": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"13057": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"13058": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"13059": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"13060": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"13061": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"13062": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"13063": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"13064": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"13065": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"13066": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"13067": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO"
		},
		"13068": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO.description"
		},
		"13069": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO.attribute"
		},
		"13070": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO.operator"
		},
		"13071": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO.values"
		},
		"13072": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO"
		},
		"13073": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.id"
		},
		"13074": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.description"
		},
		"13075": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.attribute"
		},
		"13076": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.operator"
		},
		"13077": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.values"
		},
		"13078": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO"
		},
		"13079": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.name"
		},
		"13080": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.description"
		},
		"13081": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.campaign_identifier"
		},
		"13082": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.starts_at"
		},
		"13083": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.ends_at"
		},
		"13084": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.budget"
		},
		"13085": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO"
		},
		"13086": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.id"
		},
		"13087": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.name"
		},
		"13088": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.description"
		},
		"13089": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.campaign_identifier"
		},
		"13090": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.starts_at"
		},
		"13091": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.ends_at"
		},
		"13092": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.budget"
		},
		"13093": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.promotions"
		},
		"13094": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO"
		},
		"13095": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.id"
		},
		"13096": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.name"
		},
		"13097": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.description"
		},
		"13098": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.campaign_identifier"
		},
		"13099": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.starts_at"
		},
		"13100": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.ends_at"
		},
		"13101": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.budget"
		},
		"13102": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "FilterablePromotionRuleProps"
		},
		"13103": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "FilterablePromotionRuleProps.id"
		},
		"13104": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"13105": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"13106": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO"
		},
		"13107": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.id"
		},
		"13108": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.description"
		},
		"13109": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.attribute"
		},
		"13110": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.operator"
		},
		"13111": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.values"
		},
		"13112": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "FilterableCampaignProps"
		},
		"13113": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "FilterableCampaignProps.q"
		},
		"13114": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "FilterableCampaignProps.id"
		},
		"13115": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "FilterableCampaignProps.campaign_identifier"
		},
		"13116": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"13117": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"13118": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "AddPromotionsToCampaignDTO"
		},
		"13119": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "AddPromotionsToCampaignDTO.id"
		},
		"13120": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "AddPromotionsToCampaignDTO.promotion_ids"
		},
		"13121": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "RemovePromotionsFromCampaignDTO"
		},
		"13122": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "RemovePromotionsFromCampaignDTO.id"
		},
		"13123": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "RemovePromotionsFromCampaignDTO.promotion_ids"
		},
		"13124": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"13125": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13126": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"13127": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"13128": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"13129": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13130": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"13131": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"13132": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"13133": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13134": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"13135": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"13136": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"13137": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"13138": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"13139": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"13140": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"13141": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"13142": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"13143": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"13144": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"13145": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13146": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"13147": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"13148": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"13149": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"13150": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine"
		},
		"13151": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine.id"
		},
		"13152": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine.quantity"
		},
		"13153": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine.subtotal"
		},
		"13154": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine.adjustments"
		},
		"13157": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionShippingLine"
		},
		"13158": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionShippingLine.id"
		},
		"13159": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionShippingLine.subtotal"
		},
		"13160": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionShippingLine.adjustments"
		},
		"13163": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction"
		},
		"13164": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.action"
		},
		"13165": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.item_id"
		},
		"13166": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.amount"
		},
		"13167": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.code"
		},
		"13168": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.description"
		},
		"13169": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction"
		},
		"13170": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction.action"
		},
		"13171": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction.adjustment_id"
		},
		"13172": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction.description"
		},
		"13173": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction.code"
		},
		"13174": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment"
		},
		"13175": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.action"
		},
		"13176": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.shipping_method_id"
		},
		"13177": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.amount"
		},
		"13178": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.code"
		},
		"13179": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.description"
		},
		"13180": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveShippingMethodAdjustment"
		},
		"13181": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveShippingMethodAdjustment.action"
		},
		"13182": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveShippingMethodAdjustment.adjustment_id"
		},
		"13183": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveShippingMethodAdjustment.code"
		},
		"13184": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "CampaignBudgetExceededAction"
		},
		"13185": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "CampaignBudgetExceededAction.action"
		},
		"13186": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "CampaignBudgetExceededAction.code"
		},
		"13187": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionTypeValues"
		},
		"13188": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionStatusValues"
		},
		"13189": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO"
		},
		"13190": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.type"
		},
		"13191": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.target_type"
		},
		"13192": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.allocation"
		},
		"13193": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.value"
		},
		"13194": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.currency_code"
		},
		"13195": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.max_quantity"
		},
		"13196": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.buy_rules_min_quantity"
		},
		"13197": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.apply_to_quantity"
		},
		"13198": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.promotion"
		},
		"13199": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.target_rules"
		},
		"13200": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.buy_rules"
		},
		"13201": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"13202": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"13203": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"13204": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"13205": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"13206": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"13207": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"13208": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"13209": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"13210": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"13211": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"13212": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"13213": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"13214": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"13215": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO"
		},
		"13216": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.id"
		},
		"13217": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.type"
		},
		"13218": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.target_type"
		},
		"13219": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.allocation"
		},
		"13220": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.value"
		},
		"13221": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.currency_code"
		},
		"13222": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.max_quantity"
		},
		"13223": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.buy_rules_min_quantity"
		},
		"13224": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.apply_to_quantity"
		},
		"13225": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.promotion"
		},
		"13226": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.target_rules"
		},
		"13227": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.buy_rules"
		},
		"13228": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO"
		},
		"13229": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.id"
		},
		"13230": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.type"
		},
		"13231": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.target_type"
		},
		"13232": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.allocation"
		},
		"13233": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.value"
		},
		"13234": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.currency_code"
		},
		"13235": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.max_quantity"
		},
		"13236": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.buy_rules_min_quantity"
		},
		"13237": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.apply_to_quantity"
		},
		"13238": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.promotion"
		},
		"13239": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"13240": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"13241": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"13242": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"13243": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"13244": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13245": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"13246": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"13247": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"13248": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"13249": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"13250": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"13251": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"13252": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"13253": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"13254": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"13255": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"13256": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"13257": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"13258": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"13259": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"13260": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"13261": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"13262": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"13263": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"13264": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13265": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfigOrder"
		},
		"13266": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"13267": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"13269": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"13270": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleOperatorValues"
		},
		"13271": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "PromotionRuleValueDTO"
		},
		"13272": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "PromotionRuleValueDTO.id"
		},
		"13273": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "PromotionRuleValueDTO.value"
		},
		"13274": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO"
		},
		"13275": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO.type"
		},
		"13276": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO.limit"
		},
		"13277": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO.used"
		},
		"13278": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO.currency_code"
		},
		"13279": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO"
		},
		"13280": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.id"
		},
		"13281": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.type"
		},
		"13282": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.limit"
		},
		"13283": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.used"
		},
		"13284": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.currency_code"
		},
		"13285": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO"
		},
		"13286": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.id"
		},
		"13287": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.type"
		},
		"13288": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.limit"
		},
		"13289": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.currency_code"
		},
		"13290": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.used"
		},
		"13291": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"13292": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"13293": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"13294": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"13295": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"13296": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"13297": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"13298": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"13299": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"13300": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"13301": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"13302": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"13303": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"13304": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"13305": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"13306": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"13307": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13308": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"13309": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"13310": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13311": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"13312": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"13313": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"13314": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"13315": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"13316": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"13317": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"13318": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"13320": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"13321": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"13322": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"13323": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"13324": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"13325": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"13326": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"13327": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"13328": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionAdjustmentLine"
		},
		"13329": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionAdjustmentLine.id"
		},
		"13330": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionAdjustmentLine.code"
		},
		"13333": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodTypeValues"
		},
		"13334": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodTargetTypeValues"
		},
		"13335": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodAllocationValues"
		},
		"13336": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"13337": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"13338": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"13339": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"13340": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"13341": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"13342": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"13343": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"13344": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"13346": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"13347": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"13348": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"13349": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"13350": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"13351": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"13352": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"13353": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"13354": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"13355": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"13356": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"13357": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"13358": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13359": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"13360": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13361": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetTypeValues"
		},
		"13362": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"13363": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"13364": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"13365": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"13366": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"13367": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"13368": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"13369": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"13370": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"13371": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"13372": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"13373": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"13374": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"13375": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"13376": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"13377": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"13378": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"13379": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"13380": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"13381": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"13382": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"13383": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13384": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"13385": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"13386": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"13387": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13388": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"13389": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"13390": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13391": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"13392": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"13393": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"13394": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"13395": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13396": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13397": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13398": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13399": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"13400": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"13401": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQueryProperties"
		},
		"13402": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13403": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"13405": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13406": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"13407": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"13408": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13409": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"13410": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"13411": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13412": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"13413": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13414": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"13415": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13416": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"13417": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13418": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"13419": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13420": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"13421": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/promotion/service.ts"
		},
		"reflections": {
			"1": 12801
		}
	}
}
